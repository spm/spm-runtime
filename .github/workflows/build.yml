name: Build distribution

on:
  workflow_dispatch:
    inputs:
      spm-version:
        description: 'SPM Commit / Branch / Tag / SHA to checkout'
        required: false
        default: 'main'
        type: string
      matlab-version:
        description: 'MATLAB release'
        required: false
        default: 'R2024b'
        type: string
      main-package:
        description: 'Build main package (no matlab tag)'
        required: false
        default: false
        type: boolean

  workflow_call:
    inputs:
      spm-version:
        description: 'SPM Commit / Branch / Tag / SHA to checkout'
        required: false
        default: 'main'
        type: string
      matlab-version:
        description: 'MATLAB release'
        required: false
        default: 'R2024b'
        type: string
      main-package:
        description: 'Build main package (no matlab tag)'
        required: false
        default: false
        type: boolean


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Retrieve version
        uses: actions/download-artifact@v4
        with:
          name: spm_${{ inputs.spm-version }}.env

      - name: Set version in env
        # Sets:
        #   VERSION
        #   SPM_VERSION
        #   SPM_SHA
        #   SPM_DATE
        run: |
          cat spm.env >> "$GITHUB_ENV"

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Check out spm-runtime
        uses: actions/checkout@v4

      - name: Install dependencies for running script
        run: |
          python -m pip install --upgrade pip matlab-runtime toml

      - name: Create version-specific package
        if: inputs.main-package == true
        # Main package: we update the version/sha
        run: |
          python scripts/spm_make_package.py \
            --matlab-version ${{ inputs.matlab-version }} \
            --spm-version ${VERSION} \
            --spm-sha ${SPM_SHA} \
            --main-package

      - name: Create version-specific package
        if: inputs.main-package == false
        # release-specific package
        # this should be running after the main package has been created
        # so we keep the version/sha unchanged
        run: |
          python scripts/spm_make_package.py \
            --matlab-version ${{ inputs.matlab-version }}

      - name: Download CTF
        uses: actions/download-artifact@v4
        with:
          name: spm_${{ inputs.spm-version }}_${{ inputs.matlab-version }}.ctf

      - name: Move CTF
        run: mv spm.ctf spm_runtime/_spm/_spm.ctf

      - name: Push changes
        if: inputs.main-package == true
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add pyproject.toml spm_runtime/_version.py
          git commit -m "[Release] ${VERSION}"
          git tag ${VERSION}
          git push --tags

      - name: Install dependencies for building package
        run: python -m pip install --upgrade build

      - name: Build distribution ðŸ“¦
        run: python -m build

      - name: Store the distribution
        uses: actions/upload-artifact@v4
        with:
          name: spm_${{ inputs.spm-version }}_${{ inputs.matlab-version }}.dist
          path: dist/
